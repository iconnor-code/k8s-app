apiVersion: v1
kind: Service
metadata:
  namespace: redis-cluster
  labels:
    app: redis-svc
  name: redis-svc 

spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: redis-sts
  ports:
  - port: 6379
    protocol: TCP
    targetPort: 6379
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: redis-cluster
  name: redis-sts
  labels:
    app: redis-sts

spec:
  serviceName: redis-svc
  selector:
    matchLabels:
      app: redis-sts
  replicas: 6

  volumeClaimTemplates:
  - metadata:
      name: redis-persistent
    spec:
      storageClassName: hm77-nfs-client
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: 10Gi 

  template:
    metadata:
      labels:
        app: redis-sts
    spec:
      restartPolicy: Always
      volumes:
      - name: redis-conf
        configMap:
          name: redis-cm
          items:
          - key: "redis.conf"
            path: "redis.conf"
      - name: localtime
        hostPath:
          path: /usr/share/zoneinfo/Asia/Shanghai
          type: File
      containers:
      - name: redis
        image: redis:latest
        imagePullPolicy: IfNotPresent

        command:
        - "redis-server"

        args:
        - "/etc/redis/redis.conf"
        - "--cluster-announce-ip"
        - "$(POD_IP)"

        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: redis-6379
          containerPort: 6379

        volumeMounts:
        - name: redis-conf
          mountPath: "/etc/redis"
        - name: redis-persistent
          mountPath: "/data"
        - name: localtime
          mountPath: /etc/localtime
          readOnly: true
